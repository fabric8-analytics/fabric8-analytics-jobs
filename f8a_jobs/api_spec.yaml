openapi: 3.0.1
info:
  title: Collection of APIs for backend processes
  version: '0.1'
paths:
  /ingestions/epv:
    post:
      tags:
      - Ingestion Process
      description: API to trigger a Selinon flow for ingestion of provided EPV.
      operationId: f8a_jobs.graph_ingestion.ingest_epv

      parameters:
      - name: auth-token
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestData'

      responses:
        201:
          description: Response with Selinon dispacher ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseData"

        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to initiate worker flow.

components:
  schemas:
    RequestBase:
      title: Request Base
      type: object
      properties:
        package:
          type: string
          example: <a_package_of_respective_ecosystem>
        version:
          type: string
          example: <verison_of_package>

    ResponseBase:
      title: Response Base
      type: object
      properties:
        dispacher_id:
          type: string
          example: <a_unique_id>
      allOf:
        - $ref: '#/components/schemas/RequestBase'

    RequestData:
      title: API Request Body
      type: object
      properties:
        maven:
          type: array
          items:
            $ref: "#/components/schemas/RequestBase"
        pypi:
          type: array
          items:
            $ref: "#/components/schemas/RequestBase"
        npm:
          type: array
          items:
            $ref: "#/components/schemas/RequestBase"
        golang:
          type: array
          items:
            $ref: '#/components/schemas/RequestBase'

    ResponseData:
      title: API Response Body
      type: object
      properties:
        maven:
          type: array
          items:
            $ref: '#/components/schemas/ResponseBase'
        pypi:
          type: array
          items:
            $ref: '#/components/schemas/ResponseBase'
        npm:
          type: array
          items:
            $ref: '#/components/schemas/ResponseBase'
        golang:
          type: array
          items:
            $ref: '#/components/schemas/ResponseBase'